services:
  #DBs
  catalog-db:
    container_name: catalog-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalogDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data/

  basket-db:
    container_name: basket-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BasketDb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data/

  order-db:
    container_name: order-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Tr1c0lor
    restart: always
    ports:
      - "1433:1433"

  #Caching
  distributedcache:
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"

  #Messaging
  messagebroker:
    container_name: messagebroker
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  #APIs
  catalog.api:
    container_name: Catalog.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=catalog-db;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - IdentityServer__Authority=https://shopping.identityserver:8081
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/home/app/.aspnet/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Tr1c0lor
    depends_on:
      - catalog-db
    ports:
      - "6000:8080"  # HTTP
      - "6060:8081"  # HTTPS
    volumes:
      - ${USER_SECRETS}:/home/app/.microsoft/usersecrets:ro
      - ${ASP_NET}:/home/app/.aspnet/https:ro

  basket.api:
    container_name: Basket.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=basket-db;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - GrpcSettings__DiscountUrl=https://discount.grpc:8081
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - IdentityServer__Authority=https://shopping.identityserver:8081
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/home/app/.aspnet/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Tr1c0lor
    depends_on:
      - basket-db
      - distributedcache
      - discount.grpc
    ports:
      - "6001:8080"  # HTTP
      - "6061:8081"  # HTTPS
    volumes:
      - ${USER_SECRETS}:/home/app/.microsoft/usersecrets:ro
      - ${ASP_NET}:/home/app/.aspnet/https:ro

  discount.grpc:
    container_name: Discount.Grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Data Source=discountdb
      - HealthCheck__Address=https://localhost:6062
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - IdentityServer__Authority=https://shopping.identityserver:8081
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/home/app/.aspnet/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Tr1c0lor
    ports:
      - "6002:8080"  # HTTP
      - "6062:8081"  # HTTPS
    volumes:
      - ${USER_SECRETS}:/home/app/.microsoft/usersecrets:ro
      - ${ASP_NET}:/home/app/.aspnet/https:ro

  ordering.api:
    container_name: Ordering.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=order-db;Database=OrderDb;User Id=sa;Password=Tr1c0lor;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFulfillment=true
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - IdentityServer__Authority=https://shopping.identityserver:8081
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/home/app/.aspnet/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Tr1c0lor
    depends_on:
      - order-db
      - messagebroker
    ports:
      - "6003:8080"  # HTTP
      - "6063:8081"  # HTTPS
    volumes:
      - ${USER_SECRETS}:/home/app/.microsoft/usersecrets:ro
      - ${ASP_NET}:/home/app/.aspnet/https:ro

  shopping.web:
    container_name: Shopping.Web
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - IdentityServer__Authority=https://shopping.identityserver:8081
      - ApiSettings__GatewayAddress=http://yarpapigateway:8080
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/home/app/.aspnet/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Tr1c0lor
    ports:
      - "6005:8080"  # HTTP
      - "6065:8081"  # HTTPS
    volumes:
      - ${USER_SECRETS}:/home/app/.microsoft/usersecrets:ro
      - ${ASP_NET}:/home/app/.aspnet/https:ro

  #OBSERVABILITY
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/user/share/elasticsearch/data

  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  #API Gateway
  kong:
    container_name: kong
    restart: always
    ports:
      #SECURE
      - "8443:8443" #PROXY
      - "8444:8444" #ADMIN
      # INSECURE
      - "8000:8000"   #PROXY
      - "8001:8001"   #ADMIN
      - "8002:8002"
#    volumes:
#      - ./certs:/etc/ssl/certs
#      - ./kong/declarative:/kong/declarative/
    environment:
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_DATABASE: "off"
      KONG_ADMIN_GUI_URL: http://localhost:8002
#      KONG_SSL_CERT: /etc/ssl/certs/localhost.crt
#      KONG_SSL_CERT_KEY: /etc/ssl/certs/localhost.key
#      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml

  #Security
  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8082:8080"
    command: start-dev
